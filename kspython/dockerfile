# Version: 0.0.1

FROM ubuntu:xenial

MAINTAINER dlintec <info@dlintec.com>
### To build use:
###   docker build -t kspython .
### To run:
###   docker run --name kspython_c -p 80:80 -p 443:443 -d kspython
### Using existing application on docker host
###   docker run --name kspython_c -p 80:80 -p 443:443 -v /local/path/to/myapp:/home/www-data/web2py/applications/myapp -d kspython
### example for start container named kspython_container using application SG at same folder as dockerfile: 
###   docker run --name kspython_c  -p 80:80 -p 443:443 -v ./app:/home/www-data/web2py/applications/K_A -d kspython
###   docker exec -i -t kspython_c chmod -R 775 /home/www-data/web2py/applications/K_A
###   docker exec -i -t kspython_c chown -R www-data:www-data /home/www-data/web2py/applications/K_A
###   docker exec -i -t kspython_c /bin/bash
# env vars
ENV PW admin
ENV INSTALL_DIR /home/www-data
ENV W2P_DIR $INSTALL_DIR/web2py
ENV CERT_PASS web2py

# update ubuntu and install necessary packages
RUN apt-get update && \
	apt-get autoremove && \
	apt-get autoclean && \
	apt-get -y install nginx-full && \
	apt-get -y install build-essential python-dev libxml2-dev python-pip unzip wget \
	          supervisor graphviz libghc-graphviz-dev libgraphviz-dev python-psycopg2 \
		  libgraphviz-dev python-pygraphviz imagemagick \
		  git \
		  ca-certificates \
                  curl && \
	pip install setuptools --no-use-wheel --upgrade && \
	PIPPATH=`which pip` && \
	$PIPPATH install --upgrade uwsgi && \
	$PIPPATH install simplejson && \
	mkdir /etc/nginx/conf.d/web2py

# copy nginx config files from repo
COPY gzip_static.conf /etc/nginx/conf.d/web2py/gzip_static.conf
COPY gzip.conf /etc/nginx/conf.d/web2py/gzip.conf
COPY web2py /etc/nginx/sites-available/web2py

# setup nginx
RUN ln -s /etc/nginx/sites-available/web2py /etc/nginx/sites-enabled/web2py && \
	rm /etc/nginx/sites-enabled/default && \
	mkdir /etc/nginx/ssl && cd /etc/nginx/ssl && \
	openssl genrsa -passout pass:$CERT_PASS 1024 > web2py.key && \
	chmod 400 web2py.key && \
	openssl req -new -x509 -nodes -sha1 -days 1780 -subj "/C=US/ST=Denial/L=Chicago/O=Dis/CN=www.example.com" -key web2py.key > web2py.crt && \
	openssl x509 -noout -fingerprint -text < web2py.crt > web2py.info && \
	mkdir /etc/uwsgi && \
	mkdir /var/log/uwsgi

# copy Emperor config files from repo
COPY web2py.ini /etc/uwsgi/web2py.ini
COPY uwsgi-emperor.conf /etc/init/uwsgi-emperor.conf

# copy Supervisor config file from repo
COPY supervisor-app.conf /etc/supervisor/conf.d/

# get and install web2py
RUN mkdir $INSTALL_DIR && cd $INSTALL_DIR && \
	wget http://web2py.com/examples/static/web2py_src.zip && \
	unzip web2py_src.zip && \
	rm web2py_src.zip && \
	mv web2py/handlers/wsgihandler.py web2py/wsgihandler.py && \
	chown -R www-data:www-data web2py && \
	cd $W2P_DIR && \
	python -c "from gluon.main import save_password; save_password('$PW',80)" && \
	python -c "from gluon.main import save_password; save_password('$PW',443)" && \
	nginx
	
 
COPY python-req-apt-get.txt /home/www-data/web2py/python-req-apt-get.txt

RUN mkdir /home/www-data/web2py/pip && \
pip install --download /home/www-data/web2py/pip -r /home/www-data/web2py/python-req-apt-get.txt && \
pip install -r /home/www-data/web2py/python-req-apt-get.txt --no-index --find-links file:///home/www-data/web2py/pip

ENV GOSU_VERSION 1.10
RUN set -x \
    && apt-get update && apt-get install -y --no-install-recommends ca-certificates wget && rm -rf /var/lib/apt/lists/* \
    && dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')" \
    && wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch" \
    && wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc" \
    && export GNUPGHOME="$(mktemp -d)" \
    && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \
    && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \
    && rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc \
    && chmod +x /usr/local/bin/gosu \
    && gosu nobody true 
    
COPY ./applications /home/www-data/web2py/applications
RUN chown -R www-data:www-data /home/www-data/web2py/applications

EXPOSE 80 443

WORKDIR $W2P_DIR

CMD ["supervisord", "-n"]
